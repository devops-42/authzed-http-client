# Schema: https://json.schemastore.org/github-action.json
name: Build java client

description: Build Java client for given parameters.

inputs:
  java-version:
    required: true
    description: "Lorem ipsum dolor sit amet"
  java-http-lib:
    required: true
    description: "Lorem ipsum dolor sit amet"

#outputs:
#  reusable_output:
#    description: 'Output from the reusable workflow'
#    value: ${{ steps.process-step.outputs.step_output }}

runs:
  using: 'composite'
  # TODO do we need the checkout
  steps:
    #    - name: Checkout repository
    #      uses: actions/checkout@v4

    - name: Read SpiceDB version file
      shell: bash
      run: echo "SPICEDB_VERSION=$(cat spicedb.version)" >> $GITHUB_ENV

    - name: Generate Java ${{ matrix.java-version }} client (${{ matrix.java-http-lib }})
      uses: openapi-generators/openapitools-generator-action@v1
      with:
        generator: java
        openapi-url: "https://raw.githubusercontent.com/authzed/authzed-go/refs/tags/${SPICEDB_VERSION}/proto/apidocs.swagger.json"
        config-file: cfg/java.yml
        # TODO param for artifact version
        command-args: -p artifactId=authzed-http-client-${{ matrix.java-http-lib }} -p "artifactVersion=${{ matrix.java-version }}-${{ env.SPICEDB_VERSION }}-0.0.0-SNAPSHOT" -p "library=${{ matrix.java-http-lib }}"

    # using 'github' as server-id prepares pushing to GitHub packages repo for snapshots
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'liberica'
        cache: maven
        cache-dependency-path: 'java-client/pom.xml'
        server-id: 'github'

    # the name of maven input directory is derived from openapi action output
    - name: Run Maven build
      shell: bash
      run: mvn -B package --file java-client/pom.xml

    # -DaltDeploymentRepository is needed as openapi generator does not create 'distributionManagement' POM section
    - name: Publish SNAPSHOT version to GitHub Packages
      shell: bash
      run: mvn -B --no-transfer-progress --file java-client/pom.xml deploy -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/ewerk/authzed-http-client
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
